import Head from 'next/head';
import styled from 'styled-components';
import { Fragment, useState } from 'react';
import { GetStaticProps, InferGetStaticPropsType } from 'next';
import Image from 'next/image';

import bg from '../../public/assets/images/main/main-bg.webp';
import connectMongo from '@/utils/connectMongo';
import NoobProHacker from '@/models/noobProHacker';
import TextBox from '@/components/Common/TextBox';
import { translateTier } from '@/utils/lib';
import Link from 'next/link';

const Layout = styled.main`
   height: 1600px;
   box-sizing: border-box;
`;

const ContentsBox = styled.main`
   position: relative;
   z-index: 2;
   width: 100%;
   height: 100vh;
   display: flex;
   justify-content: center;
   align-items: center;
   flex-direction: column;
   box-sizing: border-box;
`;

const BackgroundImage = styled.div`
   position: absolute;
   width: 100%;
   height: 100%;
   top: 0px;
   left: 0px;
   z-index: -1;
   background-color: rgba(0, 0, 0, 0.6);
   background-size: cover;
   background-position: center;
   background-blend-mode: darken;
   filter: blur(2px);
`;

const ContentsNav = styled.div`
   display: flex;
   flex-direction: column;
   width: 1200px;
   padding-bottom: 0px;
   color: white;
`;

const Divider = styled.div`
   width: 1px;
   height: 100%;
   background-color: #cacaca;
`;

const Category = styled.ul`
   display: flex;
   gap: 35px;
   margin: 0px;
   margin-top: 40px;
   margin-bottom: 60px;
   font-weight: 500;

   > li {
      text-align: center;
      list-style: none;
      font-size: 18px;
      color: #ddd;
      padding-bottom: 3px;
   }
`;

const LineList = styled.ul`
   display: flex;
   align-items: center;
   justify-content: space-between;
   box-sizing: border-box;
   width: 1200px;
`;

const LineItem = styled.div`
   position: relative;
   width: 350px;
   height: 500px;
   padding-bottom: 20px;
`;

const ImageBox = styled.div`
   position: relative;
   width: 350px;
   height: 450px;

   > img {
      :hover {
         scale: 1.02;
         cursor: pointer;
      }
   }
`;

const TextContainer = styled.div`
   display: flex;
   gap: 10px;
   align-items: center;
   justify-content: center;
   margin-top: 5px;
   padding-left: 15px;
`;

export const getStaticProps: GetStaticProps<{ noobProHacker: NoobProHacker[] }> = async () => {
   await connectMongo();

   const noobProHacker = await NoobProHacker.findLastestOne();

   return {
      props: {
         noobProHacker: JSON.parse(JSON.stringify(noobProHacker)),
      },
   };
};

type LineType = 'noob' | 'pro' | 'hacker';

const lines: LineType[] = ['noob', 'pro', 'hacker'];

export default function Home({ noobProHacker }: InferGetStaticPropsType<typeof getStaticProps>) {
   const [line, setLine] = useState(0);

   return (
      <>
         <Head>
            <title>Wakcraft</title>
            <meta name="description" content="Generated by create next app" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <link rel="icon" href="/favicon.ico" />
         </Head>
         <Layout>
            <BackgroundImage style={{ backgroundImage: `url(${bg.src})` }} />
            <ContentsBox>
               <ContentsNav>
                  <TextBox
                     text={'제 ' + noobProHacker[0].contentInfo.episode + '회'}
                     fontSize="28px"
                     fontWeight="500"
                     lineHeight="36px"
                     margin="0px 0px 10px 0px"
                     color="#868686"
                  />
                  <TextBox
                     text={'눕프로해커 : ' + noobProHacker[0].contentInfo.main_subject + '편'}
                     fontSize="36px"
                     fontWeight="500"
                     lineHeight="48px"
                  />
                  <Category>
                     {noobProHacker[0].lineInfo.map((item, index) => (
                        <Fragment key={item + index.toString()}>
                           <Divider />
                           <li onClick={() => setLine(index)}>{item.subject}</li>
                        </Fragment>
                     ))}
                  </Category>
               </ContentsNav>
               <LineList>
                  {lines.map(item => (
                     <LineItem key={item}>
                        <ImageBox>
                           <Image
                              src={noobProHacker[0].lineInfo[line].line_details[item].image_url}
                              style={{ objectFit: 'cover' }}
                              fill
                              sizes="1080px"
                              alt="noob"
                           />
                        </ImageBox>
                        <TextContainer>
                           <Link href={`/architect/${noobProHacker[0].lineInfo[line].line_details[item].minecraft_id}`}>
                              <TextBox
                                 text={noobProHacker[0].lineInfo[line].line_details[item].minecraft_id}
                                 color="white"
                                 fontSize="20px"
                                 lineHeight="32px"
                                 fontWeight="500"
                              />
                           </Link>
                           <TextBox
                              text={translateTier(item)}
                              color="#aaa"
                              fontSize="16px"
                              lineHeight="24px"
                              margin="3px 0px 0px 0px"
                              fontWeight="500"
                           />
                        </TextContainer>
                     </LineItem>
                  ))}
               </LineList>
            </ContentsBox>
         </Layout>
      </>
   );
}
